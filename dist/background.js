var p=Object.defineProperty;var f=(u,e,t)=>e in u?p(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t;var a=(u,e,t)=>(f(u,typeof e!="symbol"?e+"":e,t),t);class m{constructor(){a(this,"dbName","APIRecorderDB");a(this,"dbVersion",1);a(this,"db")}async init(){return new Promise((e,t)=>{const s=indexedDB.open(this.dbName,this.dbVersion);s.onerror=()=>t(s.error),s.onsuccess=()=>{this.db=s.result,e()},s.onupgradeneeded=r=>{const i=r.target.result;if(!i.objectStoreNames.contains("records")){const o=i.createObjectStore("records",{keyPath:"id"});o.createIndex("timestamp","timestamp",{unique:!1}),o.createIndex("method","method",{unique:!1}),o.createIndex("url","url",{unique:!1}),o.createIndex("sessionId","sessionId",{unique:!1})}i.objectStoreNames.contains("sessions")||i.createObjectStore("sessions",{keyPath:"sessionId"}),i.objectStoreNames.contains("config")||i.createObjectStore("config",{keyPath:"key"}),i.objectStoreNames.contains("pending")||i.createObjectStore("pending",{keyPath:"requestId"})}})}async ensureDB(){return this.db||await this.init(),this.db}async saveRecord(e){const t=await this.ensureDB();return new Promise((s,r)=>{const n=t.transaction(["records"],"readwrite").objectStore("records").add(e);n.onerror=()=>r(n.error),n.onsuccess=()=>s()})}async getAllRecords(){const e=await this.ensureDB();return new Promise((t,s)=>{const o=e.transaction(["records"],"readonly").objectStore("records").getAll();o.onerror=()=>s(o.error),o.onsuccess=()=>t(o.result)})}async getRecordsBySession(e){const t=await this.ensureDB();return new Promise((s,r)=>{const c=t.transaction(["records"],"readonly").objectStore("records").index("sessionId").getAll(e);c.onerror=()=>r(c.error),c.onsuccess=()=>s(c.result)})}async clearAllRecords(){const e=await this.ensureDB();return new Promise((t,s)=>{const o=e.transaction(["records"],"readwrite").objectStore("records").clear();o.onerror=()=>s(o.error),o.onsuccess=()=>t()})}async saveSessionMetadata(e){const t=await this.ensureDB();return new Promise((s,r)=>{const n=t.transaction(["sessions"],"readwrite").objectStore("sessions").put(e);n.onerror=()=>r(n.error),n.onsuccess=()=>s()})}async getSessionMetadata(e){const t=await this.ensureDB();return new Promise((s,r)=>{const n=t.transaction(["sessions"],"readonly").objectStore("sessions").get(e);n.onerror=()=>r(n.error),n.onsuccess=()=>s(n.result||null)})}async saveRecordingState(e){return this.saveConfigInternal("recordingState",e)}async getRecordingState(){return this.getConfigInternal("recordingState")}async saveFilterOptions(e){return this.saveConfigInternal("filterOptions",e)}async getFilterOptions(){return this.getConfigInternal("filterOptions")}async saveConfigInternal(e,t){const s=await this.ensureDB();return new Promise((r,i)=>{const c=s.transaction(["config"],"readwrite").objectStore("config").put({key:e,value:t});c.onerror=()=>i(c.error),c.onsuccess=()=>r()})}async getConfigInternal(e){const t=await this.ensureDB();return new Promise((s,r)=>{const n=t.transaction(["config"],"readonly").objectStore("config").get(e);n.onerror=()=>r(n.error),n.onsuccess=()=>{var c;return s(((c=n.result)==null?void 0:c.value)||null)}})}async getConfig(e){return this.getConfigInternal(e)}async saveConfig(e,t){return this.saveConfigInternal(e,t)}async savePendingRequest(e){const t=await this.ensureDB();return new Promise((s,r)=>{const n=t.transaction(["pending"],"readwrite").objectStore("pending").put({requestId:e.id,...e});n.onerror=()=>r(n.error),n.onsuccess=()=>s()})}async getPendingRequest(e){const t=await this.ensureDB();return new Promise((s,r)=>{const n=t.transaction(["pending"],"readonly").objectStore("pending").get(e);n.onerror=()=>r(n.error),n.onsuccess=()=>s(n.result)})}async updatePendingRequest(e,t){const s=await this.getPendingRequest(e);if(s){const r={...s,...t};await this.savePendingRequest(r)}}async removePendingRequest(e){const t=await this.ensureDB();return new Promise((s,r)=>{const n=t.transaction(["pending"],"readwrite").objectStore("pending").delete(e);n.onerror=()=>r(n.error),n.onsuccess=()=>s()})}async cleanupOldData(e=7){const t=Date.now()-e*24*60*60*1e3,s=await this.ensureDB();return new Promise((r,i)=>{const c=s.transaction(["records"],"readwrite").objectStore("records").index("timestamp"),g=IDBKeyRange.upperBound(t),d=c.openCursor(g);d.onerror=()=>i(d.error),d.onsuccess=l=>{const h=l.target.result;h?(h.delete(),h.continue()):r()}})}}class R{constructor(){a(this,"obviousStaticExtensions",new Set(["jpg","jpeg","png","gif","svg","webp","ico","bmp","css","js","woff","woff2","ttf","eot","mp4","mp3","avi","mov","pdf"]))}shouldRecord(e,t){const s=new URL(e.url);return!(this.isChromeExtensionRequest(e.url)||this.isDataOrBlobUrl(e.url)||t.domains.length>0&&!t.domains.some(i=>this.matchesDomain(s.hostname,i))||t.excludeStatic&&this.isObviousStaticResource(e.url)||t.ajaxOnly&&this.isObviousNonApiRequest(e))}shouldSaveRecord(e,t){return!(!e.responseStatus||t.statusCodes.length>0&&!t.statusCodes.includes(e.responseStatus)||e.responseTime<t.minResponseTime||this.isPreflightRequest(e)||this.isObviousNonApiResponse(e))}matchesDomain(e,t){if(t.startsWith("*.")){const s=t.substring(2);return e===s||e.endsWith("."+s)}return e===t}isObviousStaticResource(e){try{const s=new URL(e).pathname.toLowerCase(),r=this.getFileExtension(s);return r&&this.obviousStaticExtensions.has(r)?!0:[/\/favicon\.ico$/i,/\/robots\.txt$/i,/\/_next\/static\//i,/\/static\/.*\.(css|js)$/i].some(o=>o.test(e)||o.test(s))}catch{return!1}}getFileExtension(e){const t=e.lastIndexOf("."),s=e.lastIndexOf("/");return t>s&&t!==-1?e.substring(t+1).split("?")[0]:null}isObviousNonApiRequest(e){return e.type==="main_frame"||e.type==="sub_frame"||e.type==="image"||e.type==="stylesheet"||e.type==="script"}isChromeExtensionRequest(e){return e.startsWith("chrome-extension://")||e.startsWith("moz-extension://")||e.startsWith("webkit-extension://")}isDataOrBlobUrl(e){return e.startsWith("data:")||e.startsWith("blob:")}isPreflightRequest(e){return e.method==="OPTIONS"&&e.responseStatus===200&&!!e.responseHeaders["access-control-allow-origin"]}isObviousNonApiResponse(e){const t=e.responseHeaders["content-type"]||"";return!!(t.includes("text/html")||t.includes("text/css")||(t.includes("text/javascript")||t.includes("application/javascript"))&&!e.url.includes("callback=")&&!e.url.includes("jsonp=")||t.includes("image/")||t.includes("video/")||t.includes("audio/")||t.includes("application/pdf"))}generateUrlSignature(e){try{const t=new URL(e);let s=t.pathname;s=s.replace(/\/\d+/g,"/{id}"),s=s.replace(/\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/gi,"/{uuid}");const r=Array.from(t.searchParams.keys()).sort().join(",");return`${t.hostname}${s}?${r}`}catch{return e}}isDuplicateRequest(e,t){const s=this.generateUrlSignature(e.url);return t.some(r=>{if(r.method!==e.method)return!1;const i=this.generateUrlSignature(r.url);return s===i})}mergeRequestParameters(e){if(e.length===0)throw new Error("No records to merge");return e.length===1?e[0]:{...e.reduce((s,r)=>{const i=this.getParameterCount(s);return this.getParameterCount(r)>i?r:s}),timestamp:Math.max(...e.map(s=>s.timestamp))}}getParameterCount(e){let t=0;try{const s=new URL(e.url);t+=s.searchParams.size}catch{}return e.requestBody&&typeof e.requestBody=="object"&&(t+=Object.keys(e.requestBody).length),t}}class b{constructor(){a(this,"isRecording",!1);a(this,"isPaused",!1);a(this,"recordCount",0);a(this,"sessionId");a(this,"startTime");a(this,"pauseTime");a(this,"storageManager");a(this,"requestFilter");a(this,"pendingRequests",new Map);a(this,"recordingOptions",{maxRecords:1e3,enableFloatingWidget:!0,autoSaveSession:!0,debugMode:!1});a(this,"filterOptions",{excludeStatic:!0,ajaxOnly:!1,duplicateRemoval:!1,minResponseTime:0,statusCodes:[],domains:[]});this.storageManager=new m,this.requestFilter=new R,this.initializeListeners(),this.loadState()}initializeListeners(){chrome.runtime.onMessage.addListener((e,t,s)=>(this.handleMessage(e,s),!0)),chrome.webRequest.onBeforeRequest.addListener(e=>{this.handleRequestStart(e)},{urls:["<all_urls>"]},["requestBody"]),chrome.webRequest.onBeforeSendHeaders.addListener(e=>{this.handleRequestHeaders(e)},{urls:["<all_urls>"]},["requestHeaders"]),chrome.webRequest.onResponseStarted.addListener(e=>this.handleResponseStart(e),{urls:["<all_urls>"]},["responseHeaders"]),chrome.webRequest.onCompleted.addListener(e=>{this.handleRequestComplete(e)},{urls:["<all_urls>"]})}async loadState(){try{const e=await this.storageManager.getRecordingState();e&&(this.isRecording=e.isRecording,this.isPaused=e.isPaused||!1,this.recordCount=e.recordCount,this.sessionId=e.sessionId,this.startTime=e.startTime,this.pauseTime=e.pauseTime);const t=await this.storageManager.getFilterOptions();t&&(this.filterOptions=t);const s=await this.storageManager.getConfig("recordingOptions");s&&(this.recordingOptions={...this.recordingOptions,...s})}catch(e){console.error("Failed to load state:",e)}}async saveState(){const e={isRecording:this.isRecording,isPaused:this.isPaused,recordCount:this.recordCount,sessionId:this.sessionId,startTime:this.startTime,pauseTime:this.pauseTime,duration:this.getState().duration};try{await this.storageManager.saveRecordingState(e)}catch(t){console.error("Failed to save state:",t)}}async handleMessage(e,t){try{switch(e.type){case"START_RECORDING":await this.startRecording(),t({success:!0,state:this.getState()}),await this.notifyContentScript();break;case"STOP_RECORDING":await this.stopRecording(),t({success:!0,state:this.getState()}),await this.notifyContentScript();break;case"PAUSE_RECORDING":await this.pauseRecording(),t({success:!0,state:this.getState()}),await this.notifyContentScript();break;case"RESUME_RECORDING":await this.resumeRecording(),t({success:!0,state:this.getState()}),await this.notifyContentScript();break;case"GET_STATE":t({success:!0,state:this.getState()});break;case"GET_RECORDS":const s=await this.storageManager.getAllRecords();t({success:!0,records:s});break;case"CLEAR_RECORDS":await this.storageManager.clearAllRecords(),this.recordCount=0,await this.saveState(),t({success:!0}),await this.notifyContentScript();break;case"UPDATE_FILTERS":this.filterOptions={...this.filterOptions,...e.data},await this.storageManager.saveFilterOptions(this.filterOptions),t({success:!0});break;case"TOGGLE_RECORDING":this.isRecording?this.isPaused?await this.resumeRecording():await this.pauseRecording():await this.startRecording(),t({success:!0,state:this.getState()}),await this.notifyContentScript();break;case"OPEN_POPUP":chrome.action.openPopup(),t({success:!0});break;case"FLOATING_WIDGET_ACTION":await this.handleFloatingWidgetAction(e.data),t({success:!0,state:this.getState()});break;default:t({success:!1,error:"Unknown message type"})}}catch(s){console.error("Error handling message:",s),this.recordingOptions.debugMode&&console.log("Debug - Message details:",e),t({success:!1,error:s.message})}}async startRecording(){this.isRecording=!0,this.isPaused=!1,this.sessionId=this.generateSessionId(),this.startTime=Date.now(),this.pauseTime=void 0,this.recordCount=0,this.pendingRequests.clear();const e={sessionId:this.sessionId,startTime:this.startTime,totalRequests:0,filteredRequests:0,targetDomains:this.filterOptions.domains};await this.storageManager.saveSessionMetadata(e),await this.saveState(),this.recordingOptions.debugMode&&console.log("Recording started:",{sessionId:this.sessionId,startTime:this.startTime})}async stopRecording(){if(this.isRecording){if(this.isRecording=!1,this.isPaused=!1,this.sessionId){const e=await this.storageManager.getSessionMetadata(this.sessionId);e&&(e.endTime=Date.now(),await this.storageManager.saveSessionMetadata(e))}this.pendingRequests.clear(),await this.saveState(),this.recordingOptions.debugMode&&console.log("Recording stopped:",{sessionId:this.sessionId,recordCount:this.recordCount})}}getState(){const e=Date.now();let t=0;return this.startTime&&(this.isPaused&&this.pauseTime?t=this.pauseTime-this.startTime:this.isRecording&&(t=e-this.startTime)),{isRecording:this.isRecording,isPaused:this.isPaused,recordCount:this.recordCount,sessionId:this.sessionId,startTime:this.startTime,pauseTime:this.pauseTime,duration:t}}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}async handleRequestStart(e){if(!this.isRecording||this.isPaused)return;if(!this.requestFilter.shouldRecord(e,this.filterOptions)){this.recordingOptions.debugMode&&console.log("Filtered out request (initial):",e.url);return}const t={requestId:e.requestId,id:`${e.requestId}_${Date.now()}`,timestamp:Date.now(),method:e.method,url:e.url,requestBody:e.requestBody};this.pendingRequests.set(e.requestId,t),this.recordingOptions.debugMode&&console.log("Request started:",{requestId:e.requestId,url:e.url})}async handleRequestHeaders(e){if(!this.isRecording||this.isPaused)return;const t=this.pendingRequests.get(e.requestId);if(!t){this.recordingOptions.debugMode&&console.log("No pending request found for headers:",e.requestId);return}const s=this.parseHeaders(e.requestHeaders||[]);t.headers=s,this.pendingRequests.set(e.requestId,t),this.recordingOptions.debugMode&&console.log("Request headers updated:",{requestId:e.requestId,headerCount:Object.keys(s).length})}async handleResponseStart(e){if(!this.isRecording||this.isPaused)return;const t=this.pendingRequests.get(e.requestId);if(!t){this.recordingOptions.debugMode&&console.log("No pending request found for response:",e.requestId);return}const s=this.parseHeaders(e.responseHeaders||[]);t.responseStatus=e.statusCode,t.responseHeaders=s,this.pendingRequests.set(e.requestId,t),this.recordingOptions.debugMode&&console.log("Response started:",{requestId:e.requestId,status:e.statusCode})}async handleRequestComplete(e){if(!(!this.isRecording||this.isPaused))try{const t=this.pendingRequests.get(e.requestId);if(!t){this.recordingOptions.debugMode&&console.log("No pending request found for completion:",e.requestId);return}const s=Date.now()-t.timestamp;if(s<this.filterOptions.minResponseTime){this.pendingRequests.delete(e.requestId),this.recordingOptions.debugMode&&console.log("Request filtered by response time:",{requestId:e.requestId,responseTime:s});return}const r={id:t.id,timestamp:t.timestamp,method:t.method,url:t.url,headers:t.headers||{},requestBody:t.requestBody,responseStatus:t.responseStatus||e.statusCode,responseHeaders:t.responseHeaders||{},responseTime:s,pageUrl:e.documentUrl||e.url,pageTitle:""};if(this.requestFilter.shouldSaveRecord(r,this.filterOptions)){if(this.recordCount>=this.recordingOptions.maxRecords){console.warn("Maximum record limit reached:",this.recordingOptions.maxRecords),await this.stopRecording();return}if(await this.storageManager.saveRecord(r),this.recordCount++,await this.saveState(),this.sessionId){const i=await this.storageManager.getSessionMetadata(this.sessionId);i&&(i.filteredRequests++,await this.storageManager.saveSessionMetadata(i))}await this.notifyContentScript(),this.recordingOptions.debugMode&&console.log("Request saved:",{id:r.id,url:r.url,count:this.recordCount})}else this.recordingOptions.debugMode&&console.log("Request filtered by final check:",e.url);this.pendingRequests.delete(e.requestId)}catch(t){console.error("Error handling request complete:",t),this.recordingOptions.debugMode&&console.log("Debug - Request details:",e),this.pendingRequests.delete(e.requestId)}}parseHeaders(e){const t={};return e.forEach(s=>{s.name&&s.value&&(t[s.name.toLowerCase()]=s.value)}),t}async pauseRecording(){!this.isRecording||this.isPaused||(this.isPaused=!0,this.pauseTime=Date.now(),await this.saveState(),this.recordingOptions.debugMode&&console.log("Recording paused"))}async resumeRecording(){if(!(!this.isRecording||!this.isPaused)){if(this.isPaused=!1,this.startTime&&this.pauseTime){const e=Date.now()-this.pauseTime;this.startTime+=e}this.pauseTime=void 0,await this.saveState(),this.recordingOptions.debugMode&&console.log("Recording resumed")}}async notifyContentScript(){try{const e=await chrome.tabs.query({active:!0,currentWindow:!0}),t=this.getState();for(const r of e)r.id&&chrome.tabs.sendMessage(r.id,{type:"RECORDING_STATUS_CHANGED",data:t}).catch(()=>{});const s=await chrome.tabs.query({});for(const r of s)r.id&&r.url&&!r.url.startsWith("chrome://")&&chrome.tabs.sendMessage(r.id,{type:"UPDATE_FLOATING_WIDGET",data:{visible:this.recordingOptions.enableFloatingWidget,recordingState:t}}).catch(()=>{})}catch(e){this.recordingOptions.debugMode&&console.log("Failed to notify content script:",e)}}async handleFloatingWidgetAction(e){const{action:t,payload:s}=e;switch(t){case"toggle_recording":this.isRecording?await this.stopRecording():await this.startRecording();break;case"open_popup":chrome.action.openPopup();break;case"toggle_expand":break;case"update_position":s&&s.position&&await this.storageManager.saveConfig("floatingWidgetPosition",s.position);break}await this.notifyContentScript()}}new b;
